name: Build Test

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - linux
          - windows
          - macos

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(github.event.inputs.platform == 'all' && '["ubuntu-latest", "windows-latest", "macos-latest"]' || github.event.inputs.platform == 'linux' && '["ubuntu-latest"]' || github.event.inputs.platform == 'windows' && '["windows-latest"]' || github.event.inputs.platform == 'macos' && '["macos-latest"]' || '["ubuntu-latest"]') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Electron app (Linux)
        if: runner.os == 'Linux'
        run: npm run dist-linux

      - name: Build Electron app (Windows)
        if: runner.os == 'Windows'
        run: npm run dist-win

      - name: Build Electron app (macOS)
        if: runner.os == 'macOS'
        run: npm run dist-mac

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-builds
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.exe
            dist-electron/*.dmg
            dist-electron/*.zip
            dist-electron/*.blockmap
