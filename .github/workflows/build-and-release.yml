name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Electron app (Linux)
        if: matrix.platform == 'linux'
        run: npm run dist-linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron app (Windows)
        if: matrix.platform == 'win'
        run: npm run dist-win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Electron app (macOS)
        if: matrix.platform == 'mac'
        run: npm run dist-mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifacts
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: |
            dist-electron/*.AppImage
            dist-electron/*.deb

      - name: Upload Windows artifacts
        if: matrix.platform == 'win'
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            dist-electron/*.exe
            dist-electron/*.blockmap

      - name: Upload macOS artifacts
        if: matrix.platform == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Extract artifacts
        run: |
          # Extract Linux builds
          if [ -d "./artifacts/linux-builds" ]; then
            cp ./artifacts/linux-builds/* dist-electron/ 2>/dev/null || true
          fi
          
          # Extract Windows builds
          if [ -d "./artifacts/windows-builds" ]; then
            cp ./artifacts/windows-builds/* dist-electron/ 2>/dev/null || true
          fi
          
          # Extract macOS builds
          if [ -d "./artifacts/macos-builds" ]; then
            cp ./artifacts/macos-builds/* dist-electron/ 2>/dev/null || true
          fi

      - name: List built files
        run: |
          echo "Built files:"
          ls -la dist-electron/ || echo "No dist-electron directory found"
          echo "Artifacts:"
          find ./artifacts -type f -name "*" 2>/dev/null || echo "No artifacts found"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-electron/*.AppImage
            dist-electron/*.deb
            dist-electron/*.exe
            dist-electron/*.dmg
            dist-electron/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
